var e=Object.prototype.hasOwnProperty,t=Object.getOwnPropertySymbols,n=Object.prototype.propertyIsEnumerable,a=Object.assign;import{c as o}from"./clientRender.02544690.js";const r={};function p(p){var{components:s}=p,d=((a,o)=>{var r={};for(var p in a)e.call(a,p)&&o.indexOf(p)<0&&(r[p]=a[p]);if(null!=a&&t)for(var p of t(a))o.indexOf(p)<0&&n.call(a,p)&&(r[p]=a[p]);return r})(p,["components"]);return o("wrapper",a(a(a({},r),d),{components:s,mdxType:"MDXLayout"}),o("pre",null,o("code",a({parentName:"pre"},{className:"language-ts"}),"/** The type of a theme. */\nexport type ITheme = React.ComponentType<IThemeProps>\n\nexport interface IThemeProps {\n  staticData: IPagesStaticData\n  loadedData: IPagesLoaded\n  loadState: ILoadState\n}\n\n/**\n * All pages' static data.\n */\nexport interface IPagesStaticData {\n  /**\n   * For each page, its static data is indexed by keys.\n   */\n  [routePath: string]: Record<string, any>\n}\n\n/**\n * All runtime data that is already loaded.\n */\nexport interface IPagesLoaded {\n  [routePath: string]: IPageLoaded\n}\n\n/**\n * The runtime data of a page is a module.\n * Normally, it has a `default` property,\n * which is the main component of the page.\n */\nexport type IPageLoaded = any\n\n/**\n * The current loading state of the app.\n */\nexport type ILoadState =\n  | {\n      type: 'loading' | 'loaded' | '404'\n      routePath: string\n    }\n  | {\n      type: 'load-error'\n      routePath: string\n      error?: any\n    }\n")))}p.isMDXComponent=!0;export{p as M};
